
@using Model.ViewModels.Product;

@model VmProduct

<link href="~/Resources/Controls/jQueryBootGrid/jquery.bootgrid.min.css" rel="stylesheet" />

<style>
    .input-group-addon {
        padding: 10px 12px;
        font-size: 16px;
        font-weight: 400;
        line-height: 1;
        color: #555;
        text-align: center;
        background-color: #eee;
        border-top: 1px solid #ccc;
        border-right: none;
        border-left: 1px solid #ccc;
        border-bottom: 1px solid #ccc;
        border-radius: 4px 0 0 4px;
    }

    .bootgrid-footer .search, .bootgrid-header .search {
        display: inline-block;
        margin: 0 20px 0 0;
        vertical-align: middle;
        width: auto;
    }
</style>
<table id="productJqBootGrid" class="table table-condensed table-hover table-striped table-responsive table-bordered">
    <thead>
        <tr>
            <th data-column-id="commands" data-formatter="commands" data-sortable="false">@Model["Operations"]</th>
            <th data-column-id="Id" data-type="numeric" data-visible="false">@Model["ID"]</th>
            <th data-column-id="CategoryId" data-type="numeric" data-visible="false">@Model["Category Id"]</th>
            <th data-column-id="QuantityUnitId" data-order="desc" data-visible="false">@Model["QuantityUnit Id"]</th>
            <th data-column-id="Name" data-order="desc">@Model["Name"]</th>
            <th data-column-id="Price" data-order="desc">@Model["Price"]</th>
            @*<th data-column-id="IsPackage" data-order="desc">@Model["Is Package"]</th>*@
            <th data-column-id="Quantity" data-order="desc">@Model["Quantity"]</th>
            <th data-column-id="QuantityUnitName" data-order="desc">@Model["Quantity Unit Name"]</th>

            @if (Model.CurrentCultureName == "fa-IR")
            {
                <th data-column-id="PersianDate" data-order="desc">@Model["Date"]</th>
                <th data-column-id="PersianProductionDate" data-order="desc">@Model["Production Date"]</th>

            }
            else
            {
                <th data-column-id="StringDate" data-order="desc">@Model["Date"]</th>
                <th data-column-id="StringProductionDate" data-order="desc">@Model["Production Date"]</th>
            }

        </tr>
    </thead>
</table>

<script src="~/Resources/Controls/jQueryBootGrid/jquery.bootgrid.min.js"></script>
<script src="~/Resources/Controls/jQueryBootGrid/jquery.bootgrid.fa.min.js"></script>

<script>
    $(document).ready(function () {

        var grid = $("#productJqBootGrid").bootgrid({
        ajaxSettings: {
            method: "GET",
            cache: false
            },
            searchSettings: {
                delay: 100,
                characters: 3
            },
        ajax: true,
        post: function () {
            return {

                searchText: $(".search-field").val()
            };

        },
        url: "/product/lg?CategoryId=@Model.CategoryId",
        formatters: {

            "commands": function (column, row) {

                return "<button type='button' class='btn btn-xs btn-default command-edit' data-row-command-id='" + row.Id + "'><span class='fa fa-pencil'></span></button> " +
                    "<button type='button' class='btn btn-xs btn-default command-delete' data-row-command-id='" + row.Id + "'><span class='fa fa-trash-o'></span></button>";
            },

            "Image": function (column, row) {
                //return "<img src='" + row.ImageUrl + "' class='img-fluid' />";
            }

        }}).on("loaded.rs.jquery.bootgrid", function () {
            /* Executes after data is loaded and rendered */
            grid.find(".command-edit").on("click", function (e) {
                window.location='/product/lp/' + $(this).data("row-command-id");
            }).end()
                .find(".command-delete").on("click", function (e) {
                    var id = $(this).data("row-command-id");
                    var currentRow = $(this).parent().parent();
                    showConfirmModal('@Model["Delete product"]', '@Model["Are you sure?"]', '@Model["Ok"]', '@Model["Cancel"]',
                        function () {
                            $.ajax({
                                type: 'POST',
                                url: '/product/dp',
                                data: {
                                    id: id,
                                    categoryId:@Model.CategoryId
                                    },
                                dataType: "json",
                                success: function (response) {
                                    if (response.result == true) {
                                        currentRow.remove();
                                    }
                                    else
                                    {
                                        alert('@Model["There has been an error!"]');
                                    }
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    alert(xhr.message);
                                }
                        });
                        });
                }).end();
        });

        if ($("#addProductButton").length == 0) {
            $("#productJqBootGrid-header").find('.actionBar').append('<a onclick="return submitProduct()" href="/product/pd/@Model.CategoryId" id="btnAddProduct" class="btn btn-outline-success">@Model["Add Product"]</a>');
        }

    });

     function submitProduct() {

         var result = true;

        var checkAssignRequesst = $.ajax({
            type: 'post',
            url:'/category/cca',
            dataType: 'json',
            data: { categoryId: @Model.CategoryId},
            async:false,
        });

        checkAssignRequesst.done(function (count) {
            if (count == 0) {
                alert('@Model["Assign the feature type/s please"]');
                result = false;
            }
        });

        return result;
    }
</script>